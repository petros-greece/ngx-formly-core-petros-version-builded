{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@ngx-formly/core/json-schema/formly-json-schema.service.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","propertyIsEnumerable","create","__read","o","m","Symbol","iterator","r","ar","next","done","push","value","error","isEmpty","v","isConst","schema","enum","totalMatchedFields","field","key","fieldGroup","undefined","getFieldInitialValue","reduce","f","FormlyJsonschema","toFieldConfig","options","_toFieldConfig","_this_1","resolveSchema","type","guessType","defaultValue","default","templateOptions","label","title","readonly","readOnly","description","autoClear","addValidator","_a","parsers","Number","min","minimum","max","maximum","exclusiveMinimum","exclusiveMaximum","step","multipleOf","Math","floor","schemaType","Array","isArray","forEach","prop","resolveDependencies","propDeps_1","schemaDeps_1","keys","properties","required","expressionProperties","templateOptions.required","some","k","oneOfSchema","oneOf","every","oneOfSchemaItem","_b","constSchema","hideExpression","const","resolveMultiSchema","anyOf","minItems","maxItems","uniqueItems","from","Set","map","JSON","stringify","items","isEnum","_this_2","defineProperty","get","itemSchema","additionalItems","enumerable","configurable","multiple","toEnumOptions","formlyConfig","reverseDeepMerge","$ref","resolveDefinition","allOf","resolveAllOf","baseSchema","Error","base","concat","__spread","mode","schemas","fs","selectField","parent","formControl","filter","isFieldValid","valid","sort","f1","f2","matchedFields1","matchedFields2","normalizedValue","formattedValue","defineHiddenProp","FormControl","control","split","uri","pointer","definition","def","path","annotation","deps","schemaDeps","dependencies","dependency","dep","name","validator","validators","toEnum","decorators","target","desc","d","c","getOwnPropertyDescriptor","Reflect","decorate","__decorate","Injectable","providedIn"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\nimport { JSONSchema7, JSONSchema7TypeName } from 'json-schema';\nimport { AbstractControl, FormControl } from '@angular/forms';\nimport {\n  ɵdefineHiddenProp as defineHiddenProp,\n  ɵreverseDeepMerge as reverseDeepMerge,\n  ɵgetFieldInitialValue as getFieldInitialValue,\n} from '@ngx-formly/core';\n\nexport interface FormlyJsonschemaOptions {\n  /**\n   * allows to intercept the mapping, taking the already mapped\n   * formly field and the original JSONSchema source from which it\n   * was mapped.\n   */\n  map?: (mappedField: FormlyFieldConfig, mapSource: JSONSchema7) => FormlyFieldConfig;\n}\n\nfunction isEmpty(v: any) {\n  return v === '' || v == null;\n}\n\nfunction isConst(schema: JSONSchema7) {\n  return schema.hasOwnProperty('const') || (schema.enum && schema.enum.length === 1);\n}\n\nfunction totalMatchedFields(field: FormlyFieldConfig): number {\n  if (field.key && !field.fieldGroup) {\n    return getFieldInitialValue(field) !== undefined ? 1 : 0;\n  }\n\n  return field.fieldGroup.reduce((s, f) => totalMatchedFields(f) + s, 0);\n}\n\nfunction isFieldValid(field: FormlyFieldConfig): boolean {\n  if (field.key) {\n    return field.formControl.valid;\n  }\n\n  return field.fieldGroup.every((f) => isFieldValid(f));\n}\n\ninterface IOptions extends FormlyJsonschemaOptions {\n  schema: JSONSchema7;\n  autoClear?: boolean;\n}\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyJsonschema {\n  toFieldConfig(schema: JSONSchema7, options?: FormlyJsonschemaOptions): FormlyFieldConfig {\n    return this._toFieldConfig(schema, { schema, ...(options || {}) });\n  }\n\n  private _toFieldConfig(schema: JSONSchema7, options: IOptions): FormlyFieldConfig {\n    schema = this.resolveSchema(schema, options);\n\n    let field: FormlyFieldConfig = {\n      type: this.guessType(schema),\n      defaultValue: schema.default,\n      templateOptions: {\n        label: schema.title,\n        readonly: schema.readOnly,\n        description: schema.description,\n      },\n    };\n\n    if (options.autoClear) {\n      field['autoClear'] = true;\n    }\n\n    switch (field.type) {\n      case 'null': {\n        this.addValidator(field, 'null', ({ value }) => value === null);\n        break;\n      }\n      case 'number':\n      case 'integer': {\n        field.parsers = [(v) => (isEmpty(v) ? null : Number(v))];\n        if (schema.hasOwnProperty('minimum')) {\n          field.templateOptions.min = schema.minimum;\n        }\n\n        if (schema.hasOwnProperty('maximum')) {\n          field.templateOptions.max = schema.maximum;\n        }\n\n        if (schema.hasOwnProperty('exclusiveMinimum')) {\n          field.templateOptions.exclusiveMinimum = schema.exclusiveMinimum;\n          this.addValidator(\n            field,\n            'exclusiveMinimum',\n            ({ value }) => isEmpty(value) || value > schema.exclusiveMinimum,\n          );\n        }\n\n        if (schema.hasOwnProperty('exclusiveMaximum')) {\n          field.templateOptions.exclusiveMaximum = schema.exclusiveMaximum;\n          this.addValidator(\n            field,\n            'exclusiveMaximum',\n            ({ value }) => isEmpty(value) || value < schema.exclusiveMaximum,\n          );\n        }\n\n        if (schema.hasOwnProperty('multipleOf')) {\n          field.templateOptions.step = schema.multipleOf;\n          this.addValidator(field, 'multipleOf', ({ value }) => isEmpty(value) || (Math.floor(value*1000) % Math.floor(schema.multipleOf*1000)) === 0);\n        }\n        break;\n      }\n      case 'string': {\n        const schemaType = schema.type as JSONSchema7TypeName;\n        if (Array.isArray(schemaType) && schemaType.indexOf('null') !== -1) {\n          field.parsers = [(v) => (isEmpty(v) ? null : v)];\n        }\n\n        ['minLength', 'maxLength', 'pattern'].forEach((prop) => {\n          if (schema.hasOwnProperty(prop)) {\n            field.templateOptions[prop] = schema[prop];\n          }\n        });\n        break;\n      }\n      case 'object': {\n        field.fieldGroup = [];\n\n        const [propDeps, schemaDeps] = this.resolveDependencies(schema);\n        Object.keys(schema.properties || {}).forEach((key) => {\n          const f = this._toFieldConfig(<JSONSchema7>schema.properties[key], options);\n          field.fieldGroup.push(f);\n          f.key = key;\n          if (Array.isArray(schema.required) && schema.required.indexOf(key) !== -1) {\n            f.templateOptions.required = true;\n          }\n          if (f.templateOptions && !f.templateOptions.required && propDeps[key]) {\n            f.expressionProperties = {\n              'templateOptions.required': (m) => m && propDeps[key].some((k) => !isEmpty(m[k])),\n            };\n          }\n\n          if (schemaDeps[key]) {\n            const getConstValue = (s: JSONSchema7) => {\n              return s.hasOwnProperty('const') ? s.const : s.enum[0];\n            };\n\n            const oneOfSchema = schemaDeps[key].oneOf;\n            if (\n              oneOfSchema &&\n              oneOfSchema.every((o) => o.properties && o.properties[key] && isConst(o.properties[key]))\n            ) {\n              oneOfSchema.forEach((oneOfSchemaItem) => {\n                const { [key]: constSchema, ...properties } = oneOfSchemaItem.properties;\n                field.fieldGroup.push({\n                  ...this._toFieldConfig({ ...oneOfSchemaItem, properties }, { ...options, autoClear: true }),\n                  hideExpression: (m) => !m || getConstValue(constSchema) !== m[key],\n                });\n              });\n            } else {\n              field.fieldGroup.push({\n                ...this._toFieldConfig(schemaDeps[key], options),\n                hideExpression: (m) => !m || isEmpty(m[key]),\n              });\n            }\n          }\n        });\n\n        if (schema.oneOf) {\n          field.fieldGroup.push(this.resolveMultiSchema('oneOf', <JSONSchema7[]>schema.oneOf, options));\n        }\n\n        if (schema.anyOf) {\n          field.fieldGroup.push(this.resolveMultiSchema('anyOf', <JSONSchema7[]>schema.anyOf, options));\n        }\n        break;\n      }\n      case 'array': {\n        if (schema.hasOwnProperty('minItems')) {\n          field.templateOptions.minItems = schema.minItems;\n          this.addValidator(field, 'minItems', ({ value }) => isEmpty(value) || value.length >= schema.minItems);\n        }\n        if (schema.hasOwnProperty('maxItems')) {\n          field.templateOptions.maxItems = schema.maxItems;\n          this.addValidator(field, 'maxItems', ({ value }) => isEmpty(value) || value.length <= schema.maxItems);\n        }\n        if (schema.hasOwnProperty('uniqueItems')) {\n          field.templateOptions.uniqueItems = schema.uniqueItems;\n          this.addValidator(field, 'uniqueItems', ({ value }) => {\n            if (isEmpty(value) || !schema.uniqueItems) {\n              return true;\n            }\n\n            const uniqueItems = Array.from(new Set(value.map((v: any) => JSON.stringify(v))));\n\n            return uniqueItems.length === value.length;\n          });\n        }\n\n        // resolve items schema needed for isEnum check\n        if (schema.items && !Array.isArray(schema.items)) {\n          schema.items = this.resolveSchema(<JSONSchema7>schema.items, options);\n        }\n\n        // TODO: remove isEnum check once adding an option to skip extension\n        if (!this.isEnum(schema)) {\n          const _this = this;\n          Object.defineProperty(field, 'fieldArray', {\n            get() {\n              if (!Array.isArray(schema.items)) {\n                // When items is a single schema, the additionalItems keyword is meaningless, and it should not be used.\n                return _this._toFieldConfig(<JSONSchema7>schema.items, options);\n              }\n\n              const length = this.fieldGroup ? this.fieldGroup.length : 0;\n              const itemSchema = schema.items[length] ? schema.items[length] : schema.additionalItems;\n\n              return itemSchema ? _this._toFieldConfig(<JSONSchema7>itemSchema, options) : {};\n            },\n            enumerable: true,\n            configurable: true,\n          });\n        }\n\n        break;\n      }\n    }\n\n    if (schema.hasOwnProperty('const')) {\n      field.templateOptions.const = schema.const;\n      this.addValidator(field, 'const', ({ value }) => value === schema.const);\n      if (!field.type) {\n        field.defaultValue = schema.const;\n      }\n    }\n\n    if (this.isEnum(schema)) {\n      field.templateOptions.multiple = field.type === 'array';\n      field.type = 'enum';\n      field.templateOptions.options = this.toEnumOptions(schema);\n    }\n\n    // map in possible formlyConfig options from the widget property\n    if (schema['widget'] && schema['widget'].formlyConfig) {\n      field = reverseDeepMerge(schema['widget'].formlyConfig, field);\n    }\n\n    // if there is a map function passed in, use it to allow the user to\n    // further customize how fields are being mapped\n    return options.map ? options.map(field, schema) : field;\n  }\n\n  private resolveSchema(schema: JSONSchema7, options: IOptions) {\n    if (schema.$ref) {\n      schema = this.resolveDefinition(schema, options);\n    }\n\n    if (schema.allOf) {\n      schema = this.resolveAllOf(schema, options);\n    }\n\n    return schema;\n  }\n\n  private resolveAllOf({ allOf, ...baseSchema }: JSONSchema7, options: IOptions) {\n    if (!allOf.length) {\n      throw Error(`allOf array can not be empty ${allOf}.`);\n    }\n\n    return allOf.reduce((base: JSONSchema7, schema: JSONSchema7) => {\n      schema = this.resolveSchema(schema, options);\n      if (base.required && schema.required) {\n        base.required = [...base.required, ...schema.required];\n      }\n\n      if (schema.uniqueItems) {\n        base.uniqueItems = schema.uniqueItems;\n      }\n\n      // resolve to min value\n      ['maxLength', 'maximum', 'exclusiveMaximum', 'maxItems', 'maxProperties'].forEach((prop) => {\n        if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n          base[prop] = base[prop] < schema[prop] ? base[prop] : schema[prop];\n        }\n      });\n\n      // resolve to max value\n      ['minLength', 'minimum', 'exclusiveMinimum', 'minItems', 'minProperties'].forEach((prop) => {\n        if (!isEmpty(base[prop]) && !isEmpty(schema[prop])) {\n          base[prop] = base[prop] > schema[prop] ? base[prop] : schema[prop];\n        }\n      });\n\n      return reverseDeepMerge(base, schema);\n    }, baseSchema);\n  }\n\n  private resolveMultiSchema(mode: 'oneOf' | 'anyOf', schemas: JSONSchema7[], options: IOptions): FormlyFieldConfig {\n    return {\n      type: 'multischema',\n      fieldGroup: [\n        {\n          type: 'enum',\n          templateOptions: {\n            multiple: mode === 'anyOf',\n            options: schemas.map((s, i) => ({ label: s.title, value: i })),\n          },\n        },\n        {\n          fieldGroup: schemas.map((s, i) => ({\n            ...this._toFieldConfig(s, { ...options, autoClear: true }),\n            hideExpression: (m, fs, f) => {\n              const selectField = f.parent.parent.fieldGroup[0];\n              if (!selectField.formControl) {\n                const value = f.parent.fieldGroup\n                  .map((f, i) => [f, i] as [FormlyFieldConfig, number])\n                  .filter(([f]) => isFieldValid(f))\n                  .sort(([f1], [f2]) => {\n                    const matchedFields1 = totalMatchedFields(f1);\n                    const matchedFields2 = totalMatchedFields(f2);\n                    if (matchedFields1 === matchedFields2) {\n                      return 0;\n                    }\n\n                    return matchedFields2 > matchedFields1 ? 1 : -1;\n                  })\n                  .map(([, i]) => i);\n\n                const normalizedValue = [value.length === 0 ? 0 : value[0]];\n                const formattedValue = mode === 'anyOf' ? normalizedValue : normalizedValue[0];\n                defineHiddenProp(selectField, 'formControl', new FormControl(formattedValue));\n              }\n\n              const control = selectField.formControl;\n\n              return Array.isArray(control.value) ? control.value.indexOf(i) === -1 : control.value !== i;\n            },\n          })),\n        },\n      ],\n    };\n  }\n\n  private resolveDefinition(schema: JSONSchema7, options: IOptions): JSONSchema7 {\n    const [uri, pointer] = schema.$ref.split('#/');\n    if (uri) {\n      throw Error(`Remote schemas for ${schema.$ref} not supported yet.`);\n    }\n\n    const definition = !pointer\n      ? null\n      : pointer.split('/').reduce((def, path) => (def && def.hasOwnProperty(path) ? def[path] : null), options.schema);\n\n    if (!definition) {\n      throw Error(`Cannot find a definition for ${schema.$ref}.`);\n    }\n\n    if (definition.$ref) {\n      return this.resolveDefinition(definition, options);\n    }\n\n    return {\n      ...definition,\n      ...['title', 'description', 'default'].reduce((annotation, p) => {\n        if (schema.hasOwnProperty(p)) {\n          annotation[p] = schema[p];\n        }\n\n        return annotation;\n      }, {}),\n    };\n  }\n\n  private resolveDependencies(schema: JSONSchema7) {\n    const deps = {};\n    const schemaDeps = {};\n\n    Object.keys(schema.dependencies || {}).forEach((prop) => {\n      const dependency = schema.dependencies[prop] as JSONSchema7;\n      if (Array.isArray(dependency)) {\n        // Property dependencies\n        dependency.forEach((dep) => {\n          if (!deps[dep]) {\n            deps[dep] = [prop];\n          } else {\n            deps[dep].push(prop);\n          }\n        });\n      } else {\n        // schema dependencies\n        schemaDeps[prop] = dependency;\n      }\n    });\n\n    return [deps, schemaDeps];\n  }\n\n  private guessType(schema: JSONSchema7) {\n    const type = schema.type as JSONSchema7TypeName;\n    if (!type && schema.properties) {\n      return 'object';\n    }\n\n    if (Array.isArray(type)) {\n      if (type.length === 1) {\n        return type[0];\n      }\n\n      if (type.length === 2 && type.indexOf('null') !== -1) {\n        return type[type[0] === 'null' ? 1 : 0];\n      }\n    }\n\n    return type;\n  }\n\n  private addValidator(field: FormlyFieldConfig, name: string, validator: (control: AbstractControl) => boolean) {\n    field.validators = field.validators || {};\n    field.validators[name] = validator;\n  }\n\n  private isEnum(schema: JSONSchema7) {\n    return (\n      schema.enum ||\n      (schema.anyOf && schema.anyOf.every(isConst)) ||\n      (schema.oneOf && schema.oneOf.every(isConst)) ||\n      (schema.uniqueItems && schema.items && !Array.isArray(schema.items) && this.isEnum(<JSONSchema7>schema.items))\n    );\n  }\n\n  private toEnumOptions(schema: JSONSchema7) {\n    if (schema.enum) {\n      return schema.enum.map((value) => ({ value, label: value }));\n    }\n\n    const toEnum = (s: JSONSchema7) => {\n      const value = s.hasOwnProperty('const') ? s.const : s.enum[0];\n\n      return { value, label: s.title || value };\n    };\n\n    if (schema.anyOf) {\n      return schema.anyOf.map(toEnum);\n    }\n\n    if (schema.oneOf) {\n      return schema.oneOf.map(toEnum);\n    }\n\n    return this.toEnumOptions(<JSONSchema7>schema.items);\n  }\n}\n"]}