{"version":3,"file":"ngx-formly-core.js","sources":["ng://@ngx-formly/core/lib/utils.ts","ng://@ngx-formly/core/lib/services/formly.config.ts","ng://@ngx-formly/core/lib/services/formly.builder.ts","ng://@ngx-formly/core/lib/components/formly.form.ts","ng://@ngx-formly/core/lib/components/formly.field.ts","ng://@ngx-formly/core/lib/templates/formly.attributes.ts","ng://@ngx-formly/core/lib/templates/field.type.ts","ng://@ngx-formly/core/lib/templates/formly.group.ts","ng://@ngx-formly/core/lib/templates/formly.validation-message.ts","ng://@ngx-formly/core/lib/extensions/field-form/utils.ts","ng://@ngx-formly/core/lib/templates/field-array.type.ts","ng://@ngx-formly/core/lib/templates/field.wrapper.ts","ng://@ngx-formly/core/lib/templates/field-template.type.ts","ng://@ngx-formly/core/lib/extensions/field-expression/utils.ts","ng://@ngx-formly/core/lib/extensions/field-expression/field-expression.ts","ng://@ngx-formly/core/lib/extensions/field-validation/field-validation.ts","ng://@ngx-formly/core/lib/extensions/field-form/field-form.ts","ng://@ngx-formly/core/lib/extensions/core/core.ts","ng://@ngx-formly/core/lib/core.module.ts","ng://@ngx-formly/core/public_api.ts","ng://@ngx-formly/core/ngx-formly-core.ts"],"sourcesContent":["import { FormlyFieldConfig } from './core';\nimport { isObservable } from 'rxjs';\nimport { AbstractControl } from '@angular/forms';\nimport { FormlyFieldConfigCache } from './models';\n\nexport function getFieldId(formId: string, field: FormlyFieldConfig, index: string | number) {\n  if (field.id) {\n    return field.id;\n  }\n  let type = field.type;\n  if (!type && field.template) {\n    type = 'template';\n  }\n  return [formId, type, field.key, index].join('_');\n}\n\nexport function getKeyPath(field: FormlyFieldConfigCache): string[] {\n  if (!field.key) {\n    return [];\n  }\n\n  /* We store the keyPath in the field for performance reasons. This function will be called frequently. */\n  if (!field._keyPath || field._keyPath.key !== field.key) {\n    const key = field.key.indexOf('[') === -1 ? field.key : field.key.replace(/\\[(\\w+)\\]/g, '.$1');\n\n    defineHiddenProp(field, '_keyPath', { key: field.key, path: key.indexOf('.') !== -1 ? key.split('.') : [key] });\n  }\n\n  return field._keyPath.path.slice(0);\n}\n\nexport const FORMLY_VALIDATORS = ['required', 'pattern', 'minLength', 'maxLength', 'min', 'max'];\n\nexport function assignFieldValue(field: FormlyFieldConfigCache, value: any, autoClear = false) {\n  let paths = getKeyPath(field);\n  while (field.parent) {\n    field = field.parent;\n    paths = [...getKeyPath(field), ...paths];\n  }\n\n  if (autoClear && value === undefined && field['autoClear'] && !field.formControl.parent) {\n    const k = paths.pop();\n    const m = paths.reduce((model, path) => model[path] || {}, field.parent.model);\n    delete m[k];\n    return;\n  }\n\n  assignModelValue(field.model, paths, value);\n}\n\nexport function assignModelValue(model: any, paths: string[], value: any) {\n  for (let i = 0; i < paths.length - 1; i++) {\n    const path = paths[i];\n    if (!model[path] || !isObject(model[path])) {\n      model[path] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n\n    model = model[path];\n  }\n\n  model[paths[paths.length - 1]] = clone(value);\n}\n\nexport function getFieldInitialValue(field: FormlyFieldConfig) {\n  let value = field.options['_initialModel'];\n  let paths = getKeyPath(field);\n  while (field.parent) {\n    field = field.parent;\n    paths = [...getKeyPath(field), ...paths];\n  }\n\n  for (const path of paths) {\n    if (!value) {\n      return undefined;\n    }\n    value = value[path];\n  }\n\n  return value;\n}\n\nexport function getFieldValue(field: FormlyFieldConfig): any {\n  let model = field.parent ? field.parent.model : field.model;\n  for (const path of getKeyPath(field)) {\n    if (!model) {\n      return model;\n    }\n    model = model[path];\n  }\n\n  return model;\n}\n\nexport function reverseDeepMerge(dest: any, ...args: any[]) {\n  args.forEach((src) => {\n    for (const srcArg in src) {\n      if (isNil(dest[srcArg]) || isBlankString(dest[srcArg])) {\n        dest[srcArg] = clone(src[srcArg]);\n      } else if (objAndSameType(dest[srcArg], src[srcArg])) {\n        reverseDeepMerge(dest[srcArg], src[srcArg]);\n      }\n    }\n  });\n  return dest;\n}\n\n// check a value is null or undefined\nexport function isNil(value: any) {\n  return value == null;\n}\n\nexport function isUndefined(value: any) {\n  return value === undefined;\n}\n\nexport function isBlankString(value: any) {\n  return value === '';\n}\n\nexport function isFunction(value: any) {\n  return typeof value === 'function';\n}\n\nexport function objAndSameType(obj1: any, obj2: any) {\n  return (\n    isObject(obj1) &&\n    isObject(obj2) &&\n    Object.getPrototypeOf(obj1) === Object.getPrototypeOf(obj2) &&\n    !(Array.isArray(obj1) || Array.isArray(obj2))\n  );\n}\n\nexport function isObject(x: any) {\n  return x != null && typeof x === 'object';\n}\n\nexport function isPromise(obj: any): obj is Promise<any> {\n  return !!obj && typeof obj.then === 'function';\n}\n\nexport function clone(value: any): any {\n  if (\n    !isObject(value) ||\n    isObservable(value) ||\n    /* instanceof SafeHtmlImpl */ value.changingThisBreaksApplicationSecurity ||\n    ['RegExp', 'FileList', 'File', 'Blob'].indexOf(value.constructor.name) !== -1\n  ) {\n    return value;\n  }\n\n  // https://github.com/moment/moment/blob/master/moment.js#L252\n  if (value._isAMomentObject && isFunction(value.clone)) {\n    return value.clone();\n  }\n\n  if (value instanceof AbstractControl) {\n    return null;\n  }\n\n  if (value instanceof Date) {\n    return new Date(value.getTime());\n  }\n\n  if (Array.isArray(value)) {\n    return value.slice(0).map((v) => clone(v));\n  }\n\n  // best way to clone a js object maybe\n  // https://stackoverflow.com/questions/41474986/how-to-clone-a-javascript-es6-class-instance\n  const proto = Object.getPrototypeOf(value);\n  let c = Object.create(proto);\n  c = Object.setPrototypeOf(c, proto);\n  // need to make a deep copy so we dont use Object.assign\n  // also Object.assign wont copy property descriptor exactly\n  return Object.keys(value).reduce((newVal, prop) => {\n    const propDesc = Object.getOwnPropertyDescriptor(value, prop);\n    if (propDesc.get) {\n      Object.defineProperty(newVal, prop, propDesc);\n    } else {\n      newVal[prop] = clone(value[prop]);\n    }\n\n    return newVal;\n  }, c);\n}\n\nexport function defineHiddenProp(field: any, prop: string, defaultValue: any) {\n  Object.defineProperty(field, prop, { enumerable: false, writable: true, configurable: true });\n  field[prop] = defaultValue;\n}\n\ntype IObserveFn<T> = (change: { currentValue: T; previousValue?: T; firstChange: boolean }) => void;\nexport interface IObserver<T> {\n  setValue: (value: T) => void;\n  unsubscribe: Function;\n}\ninterface IObserveTarget<T> {\n  [prop: string]: any;\n  _observers?: {\n    [prop: string]: {\n      value: T;\n      onChange: IObserveFn<T>[];\n    };\n  };\n}\n\nexport function observeDeep({ source, paths, target, setFn }) {\n  const observers = [];\n  if (paths.length === 0) {\n    target = source;\n  }\n\n  Object.keys(target).forEach((path) => {\n    let unsubscribe = () => {};\n    const observer = observe(source, [...paths, path], ({ firstChange, currentValue }) => {\n      !firstChange && setFn();\n\n      unsubscribe();\n      const i = observers.indexOf(unsubscribe);\n      if (i > -1) {\n        observers.splice(i, 1);\n      }\n\n      if (isObject(currentValue) && currentValue.constructor.name === 'Object') {\n        unsubscribe = observeDeep({ source, setFn, paths: [...paths, path], target: currentValue });\n        observers.push(unsubscribe);\n      }\n    });\n\n    observers.push(() => observer.unsubscribe());\n  });\n\n  return () => {\n    observers.forEach((observer) => observer());\n  };\n}\n\nexport function observe<T = any>(o: IObserveTarget<T>, paths: string[], setFn: IObserveFn<T>): IObserver<T> {\n  if (!o._observers) {\n    defineHiddenProp(o, '_observers', {});\n  }\n\n  let target = o;\n  for (let i = 0; i < paths.length - 1; i++) {\n    if (!target[paths[i]] || !isObject(target[paths[i]])) {\n      target[paths[i]] = /^\\d+$/.test(paths[i + 1]) ? [] : {};\n    }\n    target = target[paths[i]];\n  }\n\n  const key = paths[paths.length - 1];\n  const prop = paths.join('.');\n  if (!o._observers[prop]) {\n    o._observers[prop] = { value: target[key], onChange: [] };\n  }\n\n  const state = o._observers[prop];\n  if (state.onChange.indexOf(setFn) === -1) {\n    state.onChange.push(setFn);\n    setFn({ currentValue: state.value, firstChange: true });\n    if (state.onChange.length === 1) {\n      const { enumerable } = Object.getOwnPropertyDescriptor(target, key) || { enumerable: true };\n      Object.defineProperty(target, key, {\n        enumerable,\n        configurable: true,\n        get: () => state.value,\n        set: (currentValue) => {\n          if (currentValue !== state.value) {\n            const previousValue = state.value;\n            state.value = currentValue;\n            state.onChange.forEach((changeFn) => changeFn({ previousValue, currentValue, firstChange: false }));\n          }\n        },\n      });\n    }\n  }\n\n  return {\n    setValue(value: T) {\n      state.value = value;\n    },\n    unsubscribe() {\n      state.onChange = state.onChange.filter((changeFn) => changeFn !== setFn);\n    },\n  };\n}\n\nexport function reduceFormUpdateValidityCalls(form: any, action: Function) {\n  const updateValidity = form._updateTreeValidity.bind(form);\n\n  let updateValidityArgs = null;\n  form._updateTreeValidity = (...args) => (updateValidityArgs = args);\n  action();\n\n  updateValidityArgs && updateValidity(updateValidityArgs);\n  form._updateTreeValidity = updateValidity;\n}\n","import { Injectable, InjectionToken, ComponentRef } from '@angular/core';\nimport { FieldType } from './../templates/field.type';\nimport { reverseDeepMerge, defineHiddenProp } from './../utils';\nimport {\n  FormlyFieldConfig,\n  FormlyFieldConfigCache,\n  ConfigOption,\n  TypeOption,\n  ValidatorOption,\n  WrapperOption,\n  FormlyExtension,\n  ValidationMessageOption,\n} from '../models';\n\nexport const FORMLY_CONFIG = new InjectionToken<ConfigOption[]>('FORMLY_CONFIG');\n\n/**\n * Maintains list of formly field directive types. This can be used to register new field templates.\n */\n@Injectable({ providedIn: 'root' })\nexport class FormlyConfig {\n  types: { [name: string]: TypeOption } = {};\n  validators: { [name: string]: ValidatorOption } = {};\n  wrappers: { [name: string]: WrapperOption } = {};\n  messages: { [name: string]: ValidationMessageOption['message'] } = {};\n  extras: ConfigOption['extras'] = {\n    checkExpressionOn: 'changeDetectionCheck',\n    showError(field: FieldType) {\n      return (\n        field.formControl &&\n        field.formControl.invalid &&\n        (field.formControl.touched ||\n          (field.options.parentForm && field.options.parentForm.submitted) ||\n          !!(field.field.validation && field.field.validation.show))\n      );\n    },\n  };\n  extensions: { [name: string]: FormlyExtension } = {};\n\n  addConfig(config: ConfigOption) {\n    if (config.types) {\n      config.types.forEach((type) => this.setType(type));\n    }\n    if (config.validators) {\n      config.validators.forEach((validator) => this.setValidator(validator));\n    }\n    if (config.wrappers) {\n      config.wrappers.forEach((wrapper) => this.setWrapper(wrapper));\n    }\n    if (config.validationMessages) {\n      config.validationMessages.forEach((validation) => this.addValidatorMessage(validation.name, validation.message));\n    }\n    if (config.extensions) {\n      config.extensions.forEach((c) => (this.extensions[c.name] = c.extension));\n    }\n    if (config.extras) {\n      this.extras = { ...this.extras, ...config.extras };\n    }\n  }\n\n  setType(options: TypeOption | TypeOption[]) {\n    if (Array.isArray(options)) {\n      options.forEach((option) => this.setType(option));\n    } else {\n      if (!this.types[options.name]) {\n        this.types[options.name] = <TypeOption>{ name: options.name };\n      }\n\n      ['component', 'extends', 'defaultOptions'].forEach((prop) => {\n        if (options.hasOwnProperty(prop)) {\n          this.types[options.name][prop] = options[prop];\n        }\n      });\n\n      if (options.wrappers) {\n        options.wrappers.forEach((wrapper) => this.setTypeWrapper(options.name, wrapper));\n      }\n    }\n  }\n\n  getType(name: string): TypeOption {\n    if (!this.types[name]) {\n      throw new Error(\n        `[Formly Error] The type \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`,\n      );\n    }\n\n    this.mergeExtendedType(name);\n\n    return this.types[name];\n  }\n\n  getMergedField(field: FormlyFieldConfig = {}): any {\n    const type = this.getType(field.type);\n    if (type.defaultOptions) {\n      reverseDeepMerge(field, type.defaultOptions);\n    }\n\n    const extendDefaults = type.extends && this.getType(type.extends).defaultOptions;\n    if (extendDefaults) {\n      reverseDeepMerge(field, extendDefaults);\n    }\n\n    if (field && field.optionsTypes) {\n      field.optionsTypes.forEach((option) => {\n        const defaultOptions = this.getType(option).defaultOptions;\n        if (defaultOptions) {\n          reverseDeepMerge(field, defaultOptions);\n        }\n      });\n    }\n\n    const componentRef = this.resolveFieldTypeRef(field);\n    if (componentRef && componentRef.instance && componentRef.instance.defaultOptions) {\n      reverseDeepMerge(field, componentRef.instance.defaultOptions);\n    }\n\n    if (!field.wrappers && type.wrappers) {\n      field.wrappers = [...type.wrappers];\n    }\n  }\n\n  /** @internal */\n  resolveFieldTypeRef(field: FormlyFieldConfigCache = {}): ComponentRef<FieldType> {\n    if (!field.type) {\n      return null;\n    }\n\n    const type = this.getType(field.type);\n    if (!type.component || type['_componentRef']) {\n      return type['_componentRef'];\n    }\n\n    const { _resolver, _injector } = field.options;\n    if (!_resolver || !_injector) {\n      return null;\n    }\n\n    defineHiddenProp(\n      type,\n      '_componentRef',\n      _resolver.resolveComponentFactory<FieldType>(type.component).create(_injector),\n    );\n\n    return type['_componentRef'];\n  }\n\n  setWrapper(options: WrapperOption) {\n    this.wrappers[options.name] = options;\n    if (options.types) {\n      options.types.forEach((type) => {\n        this.setTypeWrapper(type, options.name);\n      });\n    }\n  }\n\n  getWrapper(name: string): WrapperOption {\n    if (!this.wrappers[name]) {\n      throw new Error(\n        `[Formly Error] The wrapper \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`,\n      );\n    }\n\n    return this.wrappers[name];\n  }\n\n  setTypeWrapper(type: string, name: string) {\n    if (!this.types[type]) {\n      this.types[type] = <TypeOption>{};\n    }\n    if (!this.types[type].wrappers) {\n      this.types[type].wrappers = [];\n    }\n    if (this.types[type].wrappers.indexOf(name) === -1) {\n      this.types[type].wrappers.push(name);\n    }\n  }\n\n  setValidator(options: ValidatorOption) {\n    this.validators[options.name] = options;\n  }\n\n  getValidator(name: string): ValidatorOption {\n    if (!this.validators[name]) {\n      throw new Error(\n        `[Formly Error] The validator \"${name}\" could not be found. Please make sure that is registered through the FormlyModule declaration.`,\n      );\n    }\n\n    return this.validators[name];\n  }\n\n  addValidatorMessage(name: string, message: ValidationMessageOption['message']) {\n    this.messages[name] = message;\n  }\n\n  getValidatorMessage(name: string) {\n    return this.messages[name];\n  }\n\n  private mergeExtendedType(name: string) {\n    if (!this.types[name].extends) {\n      return;\n    }\n\n    const extendedType = this.getType(this.types[name].extends);\n    if (!this.types[name].component) {\n      this.types[name].component = extendedType.component;\n    }\n\n    if (!this.types[name].wrappers) {\n      this.types[name].wrappers = extendedType.wrappers;\n    }\n  }\n}\n","import { Injectable, ComponentFactoryResolver, Injector, Optional } from '@angular/core';\nimport { FormGroup, FormArray, FormGroupDirective } from '@angular/forms';\nimport { FormlyConfig } from './formly.config';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache } from '../models';\nimport { defineHiddenProp, reduceFormUpdateValidityCalls, observe } from '../utils';\n\n@Injectable({ providedIn: 'root' })\nexport class FormlyFormBuilder {\n  constructor(\n    private config: FormlyConfig,\n    private resolver: ComponentFactoryResolver,\n    private injector: Injector,\n    @Optional() private parentForm: FormGroupDirective,\n  ) {}\n\n  buildForm(form: FormGroup | FormArray, fieldGroup: FormlyFieldConfig[] = [], model: any, options: FormlyFormOptions) {\n    this.build({ fieldGroup, model, form, options });\n  }\n\n  build(field: FormlyFieldConfig) {\n    if (!this.config.extensions.core) {\n      throw new Error('NgxFormly: missing `forRoot()` call. use `forRoot()` when registering the `FormlyModule`.');\n    }\n\n    if (!field.parent) {\n      this._setOptions(field);\n      reduceFormUpdateValidityCalls(field.form, () => this._build(field));\n      const options = (field as FormlyFieldConfigCache).options;\n      options.checkExpressions && options.checkExpressions(field, true);\n      options.detectChanges && options.detectChanges(field);\n    } else {\n      this._build(field);\n    }\n  }\n\n  private _build(field: FormlyFieldConfigCache) {\n    if (!field) {\n      return;\n    }\n\n    this.getExtensions().forEach((extension) => extension.prePopulate && extension.prePopulate(field));\n    this.getExtensions().forEach((extension) => extension.onPopulate && extension.onPopulate(field));\n\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f) => this._build(f));\n    }\n\n    this.getExtensions().forEach((extension) => extension.postPopulate && extension.postPopulate(field));\n  }\n\n  private getExtensions() {\n    return Object.keys(this.config.extensions).map((name) => this.config.extensions[name]);\n  }\n\n  private _setOptions(field: FormlyFieldConfigCache) {\n    field.form = field.form || new FormGroup({});\n    field.model = field.model || {};\n    field.options = field.options || {};\n    const options = field.options;\n\n    if (!options._resolver) {\n      defineHiddenProp(options, '_resolver', this.resolver);\n    }\n\n    if (!options._injector) {\n      defineHiddenProp(options, '_injector', this.injector);\n    }\n\n    if (!options.build) {\n      options._buildForm = () => {\n        console.warn(`Formly: 'options._buildForm' is deprecated since v6.0, use 'options.build' instead.`);\n        this.build(field);\n      };\n      options.build = (f: FormlyFieldConfig) => this.build(f);\n    }\n\n    if (!options.parentForm && this.parentForm) {\n      defineHiddenProp(options, 'parentForm', this.parentForm);\n      observe(options, ['parentForm', 'submitted'], ({ firstChange }) => {\n        if (!firstChange) {\n          options.checkExpressions(field);\n          options.detectChanges(field);\n        }\n      });\n    }\n  }\n}\n","import {\n  Component,\n  ChangeDetectionStrategy,\n  DoCheck,\n  OnChanges,\n  Input,\n  SimpleChanges,\n  EventEmitter,\n  Output,\n  OnDestroy,\n  NgZone,\n} from '@angular/core';\nimport { FormGroup, FormArray } from '@angular/forms';\nimport { FormlyFieldConfig, FormlyFormOptions, FormlyFieldConfigCache } from '../models';\nimport { FormlyFormBuilder } from '../services/formly.builder';\nimport { FormlyConfig } from '../services/formly.config';\nimport { clone } from '../utils';\nimport { switchMap, filter, take } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-form',\n  template: ` <formly-field *ngFor=\"let f of fields\" [field]=\"f\"></formly-field> `,\n  providers: [FormlyFormBuilder],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyForm implements DoCheck, OnChanges, OnDestroy {\n  @Input()\n  set form(form: FormGroup | FormArray) {\n    this.field.form = form;\n  }\n  get form() {\n    return this.field.form as FormGroup | FormArray;\n  }\n\n  @Input()\n  set model(model: any) {\n    this.setField({ model });\n  }\n  get model() {\n    return this.field.model;\n  }\n\n  @Input()\n  set fields(fieldGroup: FormlyFieldConfig[]) {\n    this.setField({ fieldGroup });\n  }\n  get fields() {\n    return this.field.fieldGroup;\n  }\n\n  @Input()\n  set options(options: FormlyFormOptions) {\n    this.setField({ options });\n  }\n  get options() {\n    return this.field.options;\n  }\n\n  @Output() modelChange = new EventEmitter<any>();\n\n  private field: FormlyFieldConfigCache = {};\n  private _modelChangeValue: any = {};\n  private valueChangesUnsubscribe = () => {};\n\n  constructor(private builder: FormlyFormBuilder, private config: FormlyConfig, private ngZone: NgZone) {}\n\n  ngDoCheck() {\n    if (this.config.extras.checkExpressionOn === 'changeDetectionCheck') {\n      this.checkExpressionChange();\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.fields || changes.form || (changes.model && this._modelChangeValue !== changes.model.currentValue)) {\n      this.valueChangesUnsubscribe();\n      this.builder.build(this.field);\n      this.valueChangesUnsubscribe = this.valueChanges();\n    }\n  }\n\n  ngOnDestroy() {\n    this.valueChangesUnsubscribe();\n  }\n\n  private checkExpressionChange() {\n    this.field.options.checkExpressions(this.field);\n  }\n\n  private valueChanges() {\n    this.valueChangesUnsubscribe();\n\n    const sub = this.field.options.fieldChanges\n      .pipe(\n        filter(({ type }) => type === 'valueChanges'),\n        switchMap(() => this.ngZone.onStable.asObservable().pipe(take(1))),\n      )\n      .subscribe(() =>\n        this.ngZone.runGuarded(() => {\n          // runGuarded is used to keep in sync the expression changes\n          // https://github.com/ngx-formly/ngx-formly/issues/2095\n          this.checkExpressionChange();\n          this.modelChange.emit((this._modelChangeValue = clone(this.model)));\n        }),\n      );\n\n    return () => sub.unsubscribe();\n  }\n\n  private setField(field: FormlyFieldConfigCache) {\n    this.field = {\n      ...this.field,\n      ...(this.config.extras.immutable ? clone(field) : field),\n    };\n  }\n}\n","import {\n  Component,\n  Input,\n  ViewContainerRef,\n  ViewChild,\n  ComponentRef,\n  SimpleChanges,\n  ComponentFactoryResolver,\n  OnInit,\n  OnChanges,\n  OnDestroy,\n  AfterContentInit,\n  AfterViewInit,\n  Renderer2,\n  ElementRef,\n  ChangeDetectionStrategy,\n} from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig, FormlyFieldConfigCache } from '../models';\nimport { defineHiddenProp, observe, observeDeep, getFieldValue, assignFieldValue } from '../utils';\nimport { FieldWrapper } from '../templates/field.wrapper';\nimport { FieldType } from '../templates/field.type';\nimport { isObservable } from 'rxjs';\nimport { debounceTime, distinctUntilChanged, startWith } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-field',\n  template: '<ng-template #container></ng-template>',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyField implements OnInit, OnChanges, AfterContentInit, AfterViewInit, OnDestroy {\n  @Input() field: FormlyFieldConfig;\n\n  @ViewChild('container', { read: ViewContainerRef, static: true }) containerRef: ViewContainerRef;\n\n  private hostObservers: ReturnType<typeof observe>[] = [];\n  private componentRefs: any[] = [];\n  private hooksObservers: Function[] = [];\n\n  valueChangesUnsubscribe = () => {};\n\n  constructor(\n    private config: FormlyConfig,\n    private renderer: Renderer2,\n    private resolver: ComponentFactoryResolver,\n    private elementRef: ElementRef,\n  ) {}\n\n  ngAfterContentInit() {\n    this.triggerHook('afterContentInit');\n  }\n\n  ngAfterViewInit() {\n    this.triggerHook('afterViewInit');\n  }\n\n  ngOnInit() {\n    this.triggerHook('onInit');\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.triggerHook('onChanges', changes);\n  }\n\n  ngOnDestroy() {\n    this.resetRefs(this.field);\n    this.hostObservers.forEach((hostObserver) => hostObserver.unsubscribe());\n    this.hooksObservers.forEach((unsubscribe) => unsubscribe());\n    this.valueChangesUnsubscribe();\n    this.triggerHook('onDestroy');\n  }\n\n  private renderField(containerRef: ViewContainerRef, f: FormlyFieldConfigCache, wrappers: string[]) {\n    if (this.containerRef === containerRef) {\n      this.resetRefs(this.field);\n      this.containerRef.clear();\n    }\n\n    if (wrappers && wrappers.length > 0) {\n      const [wrapper, ...wps] = wrappers;\n      const { component } = this.config.getWrapper(wrapper);\n\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n      observe<ViewContainerRef>(ref.instance, ['fieldComponent'], ({ currentValue, previousValue, firstChange }) => {\n        if (currentValue) {\n          const viewRef = previousValue ? previousValue.detach() : null;\n          if (viewRef && !viewRef.destroyed) {\n            currentValue.insert(viewRef);\n          } else {\n            this.renderField(currentValue, f, wps);\n          }\n\n          !firstChange && ref.changeDetectorRef.detectChanges();\n        }\n      });\n    } else if (f && f.type) {\n      const { component } = this.config.getType(f.type);\n      const ref = containerRef.createComponent<FieldWrapper>(this.resolver.resolveComponentFactory(component));\n      this.attachComponentRef(ref, f);\n    }\n  }\n\n  private triggerHook(name: string, changes?: SimpleChanges) {\n    if (name === 'onInit' || (name === 'onChanges' && changes.field && !changes.field.firstChange)) {\n      this.valueChangesUnsubscribe = this.fieldChanges(this.field);\n    }\n\n    if (this.field && this.field.hooks && this.field.hooks[name]) {\n      if (!changes || changes.field) {\n        const r = this.field.hooks[name](this.field);\n        if (isObservable(r) && ['onInit', 'afterContentInit', 'afterViewInit'].indexOf(name) !== -1) {\n          const sub = r.subscribe();\n          this.hooksObservers.push(() => sub.unsubscribe());\n        }\n      }\n    }\n\n    if (name === 'onChanges' && changes.field) {\n      this.renderHostBinding();\n      this.resetRefs(changes.field.previousValue);\n      this.renderField(this.containerRef, this.field, this.field ? this.field.wrappers : []);\n    }\n  }\n\n  private attachComponentRef<T extends FieldType>(ref: ComponentRef<T>, field: FormlyFieldConfigCache) {\n    this.componentRefs.push(ref);\n    field._componentRefs.push(ref);\n    Object.assign(ref.instance, { field });\n  }\n\n  private renderHostBinding() {\n    if (!this.field) {\n      return;\n    }\n\n    this.hostObservers.forEach((hostObserver) => hostObserver.unsubscribe());\n    this.hostObservers = [\n      observe<boolean>(this.field, ['hide'], ({ firstChange, currentValue }) => {\n        if (!firstChange || (firstChange && currentValue)) {\n          this.renderer.setStyle(this.elementRef.nativeElement, 'display', currentValue ? 'none' : '');\n        }\n      }),\n      observe<string>(this.field, ['className'], ({ firstChange, currentValue }) => {\n        if (!firstChange || (firstChange && currentValue)) {\n          this.renderer.setAttribute(this.elementRef.nativeElement, 'class', currentValue);\n        }\n      }),\n    ];\n  }\n\n  private resetRefs(field: FormlyFieldConfigCache) {\n    if (field) {\n      if (field._componentRefs) {\n        field._componentRefs = field._componentRefs.filter((ref) => this.componentRefs.indexOf(ref) === -1);\n      } else {\n        defineHiddenProp(this.field, '_componentRefs', []);\n      }\n    }\n\n    this.componentRefs = [];\n  }\n\n  private fieldChanges(field: FormlyFieldConfigCache) {\n    this.valueChangesUnsubscribe();\n    if (!field) {\n      return () => {};\n    }\n\n    const subscribes = [\n      observeDeep({\n        source: field,\n        target: field.templateOptions,\n        paths: ['templateOptions'],\n        setFn: () => field.options.detectChanges(field),\n      }),\n      observeDeep({\n        source: field,\n        target: field.options.formState,\n        paths: ['options', 'formState'],\n        setFn: () => field.options.detectChanges(field),\n      }),\n    ];\n\n    for (const path of [['template'], ['fieldGroupClassName'], ['validation', 'show']]) {\n      const fieldObserver = observe(\n        field,\n        path,\n        ({ firstChange }) => !firstChange && field.options.detectChanges(field),\n      );\n      subscribes.push(() => fieldObserver.unsubscribe());\n    }\n\n    if (field.key && !field.fieldGroup) {\n      const control = field.formControl;\n      let valueChanges = control.valueChanges.pipe(distinctUntilChanged());\n\n      if (control.value !== getFieldValue(field)) {\n        valueChanges = valueChanges.pipe(startWith(control.value));\n      }\n\n      const { updateOn, debounce } = field.modelOptions;\n      if ((!updateOn || updateOn === 'change') && debounce && debounce.default > 0) {\n        valueChanges = control.valueChanges.pipe(debounceTime(debounce.default));\n      }\n\n      const sub = valueChanges.subscribe((value) => {\n        // workaround for https://github.com/angular/angular/issues/13792\n        if (control instanceof FormControl && control['_fields'] && control['_fields'].length > 1) {\n          control.patchValue(value, { emitEvent: false, onlySelf: true });\n        }\n\n        if (field.parsers && field.parsers.length > 0) {\n          field.parsers.forEach((parserFn) => (value = parserFn(value)));\n        }\n\n        assignFieldValue(field, value, true);\n        field.options.fieldChanges.next({ value, field, type: 'valueChanges' });\n      });\n\n      subscribes.push(() => sub.unsubscribe());\n    }\n\n    return () => subscribes.forEach((subscribe) => subscribe());\n  }\n}\n","import {\n  Directive,\n  ElementRef,\n  Input,\n  OnChanges,\n  SimpleChanges,\n  Renderer2,\n  DoCheck,\n  Inject,\n  OnDestroy,\n} from '@angular/core';\nimport { FormlyFieldConfig, FormlyTemplateOptions } from '../models';\nimport { defineHiddenProp, FORMLY_VALIDATORS, observe, IObserver } from '../utils';\nimport { DOCUMENT } from '@angular/common';\n\n@Directive({\n  selector: '[formlyAttributes]',\n  host: {\n    '(focus)': 'onFocus($event)',\n    '(blur)': 'onBlur($event)',\n  },\n})\nexport class FormlyAttributes implements OnChanges, DoCheck, OnDestroy {\n  @Input('formlyAttributes') field: FormlyFieldConfig;\n  @Input() id: string;\n\n  private document: Document;\n  private uiAttributesCache: any = {};\n  private uiAttributes = [...FORMLY_VALIDATORS, 'tabindex', 'placeholder', 'readonly', 'disabled', 'step'];\n  private focusObserver: IObserver<boolean>;\n\n  /**\n   * HostBinding doesn't register listeners conditionally which may produce some perf issues.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1991\n   */\n  private uiEvents = {\n    listeners: [],\n    events: ['click', 'keyup', 'keydown', 'keypress', 'change'],\n  };\n\n  get to(): FormlyTemplateOptions {\n    return this.field.templateOptions || {};\n  }\n\n  private get fieldAttrElements(): ElementRef[] {\n    return (this.field && this.field['_elementRefs']) || [];\n  }\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef, @Inject(DOCUMENT) _document: any) {\n    this.document = _document;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes.field) {\n      this.field.name && this.setAttribute('name', this.field.name);\n\n      this.uiEvents.listeners.forEach((listener) => listener());\n      this.uiEvents.events.forEach((eventName) => {\n        let callback = this.to && this.to[eventName];\n        if (eventName === 'change') {\n          callback = this.onChange.bind(this);\n        }\n\n        if (callback) {\n          this.uiEvents.listeners.push(\n            this.renderer.listen(this.elementRef.nativeElement, eventName, (e) => callback(this.field, e)),\n          );\n        }\n      });\n\n      if (this.to && this.to.attributes) {\n        observe(this.field, ['templateOptions', 'attributes'], ({ currentValue, previousValue }) => {\n          if (previousValue) {\n            Object.keys(previousValue).forEach((attr) => this.removeAttribute(attr));\n          }\n\n          if (currentValue) {\n            Object.keys(currentValue).forEach((attr) => this.setAttribute(attr, currentValue[attr]));\n          }\n        });\n      }\n\n      this.detachElementRef(changes.field.previousValue);\n      this.attachElementRef(changes.field.currentValue);\n      if (this.fieldAttrElements.length === 1) {\n        !this.id && this.field.id && this.setAttribute('id', this.field.id);\n        this.focusObserver = observe<boolean>(this.field, ['focus'], ({ currentValue }) => {\n          this.toggleFocus(currentValue);\n        });\n      }\n    }\n\n    if (changes.id) {\n      this.setAttribute('id', this.id);\n    }\n  }\n\n  /**\n   * We need to re-evaluate all the attributes on every change detection cycle, because\n   * by using a HostBinding we run into certain edge cases. This means that whatever logic\n   * is in here has to be super lean or we risk seriously damaging or destroying the performance.\n   *\n   * Formly issue: https://github.com/ngx-formly/ngx-formly/issues/1317\n   * Material issue: https://github.com/angular/components/issues/14024\n   */\n  ngDoCheck() {\n    this.uiAttributes.forEach((attr) => {\n      const value = this.to[attr];\n      if (this.uiAttributesCache[attr] !== value) {\n        this.uiAttributesCache[attr] = value;\n        if (value || value === 0) {\n          this.setAttribute(attr, value === true ? attr : `${value}`);\n        } else {\n          this.removeAttribute(attr);\n        }\n      }\n    });\n  }\n\n  ngOnDestroy() {\n    this.uiEvents.listeners.forEach((listener) => listener());\n    this.detachElementRef(this.field);\n    this.focusObserver && this.focusObserver.unsubscribe();\n  }\n\n  toggleFocus(value: boolean) {\n    const element = this.fieldAttrElements ? this.fieldAttrElements[0] : null;\n    if (!element || !element.nativeElement.focus) {\n      return;\n    }\n\n    const isFocused =\n      !!this.document.activeElement &&\n      this.fieldAttrElements.some(\n        ({ nativeElement }) =>\n          this.document.activeElement === nativeElement || nativeElement.contains(this.document.activeElement),\n      );\n\n    if (value && !isFocused) {\n      element.nativeElement.focus();\n    } else if (!value && isFocused) {\n      element.nativeElement.blur();\n    }\n  }\n\n  onFocus($event: any) {\n    this.focusObserver && this.focusObserver.setValue(true);\n    if (this.to.focus) {\n      this.to.focus(this.field, $event);\n    }\n  }\n\n  onBlur($event: any) {\n    this.focusObserver && this.focusObserver.setValue(false);\n    if (this.to.blur) {\n      this.to.blur(this.field, $event);\n    }\n  }\n\n  onChange($event: any) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n\n    if (this.field.formControl) {\n      this.field.formControl.markAsDirty();\n    }\n  }\n\n  private attachElementRef(f: FormlyFieldConfig) {\n    if (!f) {\n      return;\n    }\n\n    if (f['_elementRefs'] && f['_elementRefs'].indexOf(this.elementRef) === -1) {\n      f['_elementRefs'].push(this.elementRef);\n    } else {\n      defineHiddenProp(f, '_elementRefs', [this.elementRef]);\n    }\n  }\n\n  private detachElementRef(f: FormlyFieldConfig) {\n    const index = f && f['_elementRefs'] ? this.fieldAttrElements.indexOf(this.elementRef) : -1;\n    if (index !== -1) {\n      this.field['_elementRefs'].splice(index, 1);\n    }\n  }\n\n  private setAttribute(attr: string, value: string) {\n    this.renderer.setAttribute(this.elementRef.nativeElement, attr, value);\n  }\n\n  private removeAttribute(attr: string) {\n    this.renderer.removeAttribute(this.elementRef.nativeElement, attr);\n  }\n}\n","import { Input, Directive } from '@angular/core';\nimport { FormlyFieldConfig } from '../models';\n\n@Directive()\nexport abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> {\n  @Input() field: F;\n  defaultOptions?: F;\n\n  get model() {\n    return this.field.model;\n  }\n\n  get form() {\n    return this.field.form;\n  }\n\n  get options() {\n    return this.field.options;\n  }\n\n  get key() {\n    return this.field.key;\n  }\n\n  get formControl() {\n    return this.field.formControl;\n  }\n\n  get to() {\n    return this.field.templateOptions || {};\n  }\n\n  get showError(): boolean {\n    return this.options.showError(this);\n  }\n\n  get id(): string {\n    return this.field.id;\n  }\n\n  get formState() {\n    return this.options.formState || {};\n  }\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-group',\n  template: `\n    <formly-field *ngFor=\"let f of field.fieldGroup\" [field]=\"f\"></formly-field>\n    <ng-content></ng-content>\n  `,\n  host: {\n    '[class]': 'field.fieldGroupClassName || \"\"',\n  },\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyGroup extends FieldType {}\n","import { Component, Input, ChangeDetectionStrategy, OnChanges } from '@angular/core';\nimport { FormlyConfig } from '../services/formly.config';\nimport { FormlyFieldConfig } from '../models';\nimport { isObject } from '../utils';\nimport { Observable, isObservable, of } from 'rxjs';\nimport { startWith, switchMap } from 'rxjs/operators';\n\n@Component({\n  selector: 'formly-validation-message',\n  template: '{{ errorMessage$ | async }}',\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyValidationMessage implements OnChanges {\n  @Input() field: FormlyFieldConfig;\n  errorMessage$: Observable<string>;\n\n  constructor(private config: FormlyConfig) {}\n\n  ngOnChanges() {\n    this.errorMessage$ = this.field.formControl.statusChanges.pipe(\n      startWith(null),\n      switchMap(() => (isObservable(this.errorMessage) ? this.errorMessage : of(this.errorMessage))),\n    );\n  }\n\n  get errorMessage() {\n    const fieldForm = this.field.formControl;\n    for (const error in fieldForm.errors) {\n      if (fieldForm.errors.hasOwnProperty(error)) {\n        let message = this.config.getValidatorMessage(error);\n\n        if (isObject(fieldForm.errors[error])) {\n          if (fieldForm.errors[error].errorPath) {\n            return;\n          }\n\n          if (fieldForm.errors[error].message) {\n            message = fieldForm.errors[error].message;\n          }\n        }\n\n        if (this.field.validation && this.field.validation.messages && this.field.validation.messages[error]) {\n          message = this.field.validation.messages[error];\n        }\n\n        if (this.field.validators && this.field.validators[error] && this.field.validators[error].message) {\n          message = this.field.validators[error].message;\n        }\n\n        if (\n          this.field.asyncValidators &&\n          this.field.asyncValidators[error] &&\n          this.field.asyncValidators[error].message\n        ) {\n          message = this.field.asyncValidators[error].message;\n        }\n\n        if (typeof message === 'function') {\n          return message(fieldForm.errors[error], this.field);\n        }\n\n        return message;\n      }\n    }\n  }\n}\n","import { EventEmitter } from '@angular/core';\nimport { FormArray, FormGroup, FormControl, AbstractControl } from '@angular/forms';\nimport {\n  getKeyPath,\n  getFieldValue,\n  isNil,\n  defineHiddenProp,\n  observe,\n  assignFieldValue,\n  isUndefined,\n} from '../../utils';\nimport { FormlyFieldConfig, FormlyFieldConfigCache } from '../../models';\n\nexport function unregisterControl(field: FormlyFieldConfig, emitEvent = false) {\n  const form = field.formControl.parent as FormArray | FormGroup;\n  if (!form) {\n    return;\n  }\n\n  const control = field.formControl;\n  const opts = { emitEvent };\n  if (form instanceof FormArray) {\n    const key = form.controls.findIndex((c) => c === control);\n    if (key !== -1) {\n      updateControl(form, opts, () => form.removeAt(key));\n    }\n  } else if (form instanceof FormGroup) {\n    const paths = getKeyPath(field);\n    const key = paths[paths.length - 1];\n    if (form.get([key]) === control) {\n      updateControl(form, opts, () => form.removeControl(key));\n    }\n  }\n\n  control.setParent(null);\n  if (field['autoClear']) {\n    if (field.parent.model) {\n      delete field.parent.model[field.key];\n    }\n    control.reset(\n      { value: undefined, disabled: control.disabled },\n      { emitEvent: field.fieldGroup ? false : emitEvent, onlySelf: true },\n    );\n  }\n}\n\nexport function findControl(field: FormlyFieldConfig): AbstractControl {\n  if (field.formControl) {\n    return field.formControl;\n  }\n\n  const form = field.parent.formControl as FormGroup;\n\n  return form ? form.get(getKeyPath(field)) : null;\n}\n\nexport function registerControl(field: FormlyFieldConfigCache, control?: any, emitEvent = false) {\n  control = control || field.formControl;\n\n  if (!control['_fields']) {\n    defineHiddenProp(control, '_fields', []);\n  }\n  if (control['_fields'].indexOf(field) === -1) {\n    control['_fields'].push(field);\n  }\n\n  if (!field.formControl && control) {\n    defineHiddenProp(field, 'formControl', control);\n    field.templateOptions.disabled = !!field.templateOptions.disabled;\n    const disabledObserver = observe(field, ['templateOptions', 'disabled'], ({ firstChange, currentValue }) => {\n      if (!firstChange) {\n        currentValue ? field.formControl.disable() : field.formControl.enable();\n      }\n    });\n    if (control.registerOnDisabledChange) {\n      control.registerOnDisabledChange(disabledObserver.setValue);\n    }\n  }\n\n  if (!field.form) {\n    return;\n  }\n\n  let form = field.form;\n  const paths = getKeyPath(field);\n  if (!form['_formlyControls']) {\n    defineHiddenProp(form, '_formlyControls', {});\n  }\n  form['_formlyControls'][paths.join('.')] = control;\n\n  for (let i = 0; i < paths.length - 1; i++) {\n    const path = paths[i];\n    if (!form.get([path])) {\n      registerControl({\n        key: path,\n        formControl: new FormGroup({}),\n        form,\n        parent: {},\n      });\n    }\n\n    form = <FormGroup>form.get([path]);\n  }\n\n  if (field['autoClear'] && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n    assignFieldValue(field, field.defaultValue);\n  }\n\n  const value = getFieldValue(field);\n  if (!(isNil(control.value) && isNil(value)) && control.value !== value && control instanceof FormControl) {\n    control.patchValue(value, { emitEvent: false });\n  }\n  const key = paths[paths.length - 1];\n  if (!field._hide && form.get([key]) !== control) {\n    updateControl(form, { emitEvent }, () => (form as FormGroup).setControl(key, control));\n  }\n}\n\nexport function updateValidity(c: AbstractControl) {\n  const status = c.status;\n  c.updateValueAndValidity({ emitEvent: false });\n  if (status !== c.status) {\n    (c.statusChanges as EventEmitter<string>).emit(c.status);\n  }\n}\n\nfunction updateControl(form: FormGroup | FormArray, opts: { emitEvent: boolean }, action: Function) {\n  /**\n   *  workaround for https://github.com/angular/angular/issues/27679\n   */\n  if (form instanceof FormGroup && !form['__patchForEachChild']) {\n    defineHiddenProp(form, '__patchForEachChild', true);\n    (form as any)._forEachChild = (cb: Function) => {\n      Object.keys(form.controls).forEach((k) => form.controls[k] && cb(form.controls[k], k));\n    };\n  }\n\n  /**\n   * workaround for https://github.com/angular/angular/issues/20439\n   */\n  const updateValueAndValidity = form.updateValueAndValidity.bind(form);\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = (opts) => {\n      updateValueAndValidity({ ...(opts || {}), emitEvent: false });\n    };\n  }\n\n  action();\n\n  if (opts.emitEvent === false) {\n    form.updateValueAndValidity = updateValueAndValidity;\n  }\n}\n","import { FormArray } from '@angular/forms';\nimport { FieldType } from './field.type';\nimport { clone, assignFieldValue, getFieldValue } from '../utils';\nimport { FormlyFieldConfig, FormlyExtension } from '../models';\nimport { registerControl, unregisterControl } from '../extensions/field-form/utils';\nimport { Directive } from '@angular/core';\n\n@Directive()\nexport abstract class FieldArrayType<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F>\n  implements FormlyExtension {\n  formControl: FormArray;\n\n  onPopulate(field: FormlyFieldConfig) {\n    if (!field.formControl && field.key) {\n      registerControl(field, new FormArray([], { updateOn: field.modelOptions.updateOn }));\n    }\n\n    field.fieldGroup = field.fieldGroup || [];\n\n    const length = field.model ? field.model.length : 0;\n    if (field.fieldGroup.length > length) {\n      for (let i = field.fieldGroup.length - 1; i >= length; --i) {\n        unregisterControl(field.fieldGroup[i]);\n        field.fieldGroup.splice(i, 1);\n      }\n    }\n\n    for (let i = field.fieldGroup.length; i < length; i++) {\n      const f = { ...clone(field.fieldArray), key: `${i}` };\n      field.fieldGroup.push(f);\n    }\n  }\n\n  add(i?: number, initialModel?: any, { markAsDirty } = { markAsDirty: true }) {\n    i = i == null ? this.field.fieldGroup.length : i;\n    if (!this.model) {\n      assignFieldValue(this.field, []);\n    }\n\n    this.model.splice(i, 0, initialModel ? clone(initialModel) : undefined);\n    this._build();\n    markAsDirty && this.formControl.markAsDirty();\n  }\n\n  remove(i: number, { markAsDirty } = { markAsDirty: true }) {\n    this.model.splice(i, 1);\n    unregisterControl(this.field.fieldGroup[i], true);\n    this.field.fieldGroup.splice(i, 1);\n    this.field.fieldGroup.forEach((f, key) => (f.key = `${key}`));\n    this._build();\n    markAsDirty && this.formControl.markAsDirty();\n  }\n\n  private _build() {\n    this.options.build(this.field);\n    this.options.fieldChanges.next({\n      field: this.field,\n      value: getFieldValue(this.field),\n      type: 'valueChanges',\n    });\n  }\n}\n","import { ViewContainerRef, ViewChild, Directive } from '@angular/core';\nimport { FieldType } from './field.type';\nimport { FormlyFieldConfig } from '../models';\n\n@Directive()\nexport abstract class FieldWrapper<F extends FormlyFieldConfig = FormlyFieldConfig> extends FieldType<F> {\n  @ViewChild('fieldComponent', { read: ViewContainerRef }) fieldComponent: ViewContainerRef;\n}\n","import { Component, ChangeDetectionStrategy } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { FieldType } from './field.type';\n\n@Component({\n  selector: 'formly-template',\n  template: `<div [innerHtml]=\"template\"></div>`,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyTemplateType extends FieldType {\n  get template() {\n    if (this.field && this.field.template !== this.innerHtml.template) {\n      this.innerHtml = {\n        template: this.field.template,\n        content: this.to.safeHtml ? this.sanitizer.bypassSecurityTrustHtml(this.field.template) : this.field.template,\n      };\n    }\n\n    return this.innerHtml.content;\n  }\n\n  private innerHtml = { content: null, template: null };\n  constructor(private sanitizer: DomSanitizer) {\n    super();\n  }\n}\n","export function evalStringExpression(expression: string, argNames: string[]) {\n  try {\n    return Function(...argNames, `return ${expression};`) as any;\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport function evalExpression(expression: string | Function | boolean, thisArg: any, argVal: any[]): any {\n  if (typeof expression === 'function') {\n    return expression.apply(thisArg, argVal);\n  } else {\n    return expression ? true : false;\n  }\n}\n","import { FormlyFieldConfig, FormlyValueChangeEvent, FormlyFieldConfigCache } from '../../models';\nimport { isObject, isNil, isFunction, defineHiddenProp, observe, reduceFormUpdateValidityCalls } from '../../utils';\nimport { evalExpression, evalStringExpression } from './utils';\nimport { Observable, Subscription } from 'rxjs';\nimport { FormlyExtension } from '../../models';\nimport { unregisterControl, registerControl, updateValidity } from '../field-form/utils';\n\n/** @experimental */\nexport class FieldExpressionExtension implements FormlyExtension {\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (field._expressions) {\n      return;\n    }\n\n    // cache built expression\n    defineHiddenProp(field, '_expressions', {});\n    field.expressionProperties = field.expressionProperties || {};\n\n    observe(field, ['hide'], ({ currentValue, firstChange }) => {\n      defineHiddenProp(field, '_hide', !!currentValue);\n      if (!firstChange || (firstChange && currentValue === true)) {\n        field.templateOptions.hidden = currentValue;\n        field.options._hiddenFieldsForCheck.push(field);\n      }\n    });\n\n    if (field.hideExpression) {\n      observe(field, ['hideExpression'], ({ currentValue: expr }) => {\n        field._expressions.hide = this.parseExpressions(field, 'hide', typeof expr === 'boolean' ? () => expr : expr);\n      });\n    }\n\n    for (const key of Object.keys(field.expressionProperties)) {\n      observe(field, ['expressionProperties', key], ({ currentValue: expr }) => {\n        if (typeof expr === 'string' || isFunction(expr)) {\n          field._expressions[key] = this.parseExpressions(field, key, expr);\n        } else if (expr instanceof Observable) {\n          const subscribe = () =>\n            (expr as Observable<any>).subscribe((v) => {\n              this.evalExpr(field, key, v);\n            });\n\n          let subscription: Subscription = subscribe();\n          const onInit = field.hooks.onInit;\n          field.hooks.onInit = () => {\n            if (subscription === null) {\n              subscription = subscribe();\n            }\n            return onInit && onInit(field);\n          };\n\n          const onDestroy = field.hooks.onDestroy;\n          field.hooks.onDestroy = () => {\n            onDestroy && onDestroy(field);\n            subscription.unsubscribe();\n            subscription = null;\n          };\n        }\n      });\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (field.parent) {\n      return;\n    }\n\n    if (!field.options.checkExpressions) {\n      field.options.checkExpressions = (f, ignoreCache = false) => {\n        reduceFormUpdateValidityCalls(f.form, () => this.checkExpressions(f, ignoreCache));\n\n        const options = field.options;\n        options._hiddenFieldsForCheck.sort((f) => (f.hide ? -1 : 1)).forEach((f) => this.changeHideState(f, f.hide));\n        options._hiddenFieldsForCheck = [];\n      };\n      field.options._checkField = (f, ignoreCache) => {\n        console.warn(`Formly: 'options._checkField' is deprecated since v6.0, use 'options.checkExpressions' instead.`);\n        field.options.checkExpressions(f, ignoreCache);\n      };\n    }\n  }\n\n  private parseExpressions(field: FormlyFieldConfigCache, path: string, expr: any) {\n    let parentExpression: any;\n    if (field.parent && ['hide', 'templateOptions.disabled'].includes(path)) {\n      parentExpression = evalStringExpression(`!!field.parent.${path}`, ['field']);\n    }\n\n    expr = expr || (() => false);\n    if (typeof expr === 'string') {\n      expr = evalStringExpression(expr, ['model', 'formState', 'field']);\n    }\n\n    let currentValue: any;\n\n    return (ignoreCache?: boolean) => {\n      const exprValue = evalExpression(\n        parentExpression ? (...args) => parentExpression(field) || expr(...args) : expr,\n        { field },\n        [field.model, field.options.formState, field],\n      );\n\n      if (\n        ignoreCache ||\n        (currentValue !== exprValue &&\n          (!isObject(exprValue) || JSON.stringify(exprValue) !== JSON.stringify(currentValue)))\n      ) {\n        currentValue = exprValue;\n        this.evalExpr(field, path, exprValue);\n\n        return true;\n      }\n\n      return false;\n    };\n  }\n\n  private checkExpressions(field: FormlyFieldConfigCache, ignoreCache = false) {\n    if (!field) {\n      return;\n    }\n\n    if (field._expressions) {\n      for (const key of Object.keys(field._expressions)) {\n        field._expressions[key](ignoreCache);\n      }\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f) => this.checkExpressions(f, ignoreCache));\n    }\n  }\n\n  private changeDisabledState(field: FormlyFieldConfig, value: boolean) {\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter((f) => !f.expressionProperties || !f.expressionProperties.hasOwnProperty('templateOptions.disabled'))\n        .forEach((f) => this.changeDisabledState(f, value));\n    }\n\n    if (field.key && field.templateOptions.disabled !== value) {\n      field.templateOptions.disabled = value;\n    }\n  }\n\n  private changeHideState(field: FormlyFieldConfig, hide: boolean) {\n    if (field.formControl && field.key) {\n      defineHiddenProp(field, '_hide', !!(hide || field.hide));\n      const c = field.formControl;\n      if (c['_fields'].length > 1) {\n        updateValidity(c);\n      }\n\n      hide === true && c['_fields'].every((f) => !!f._hide) ? unregisterControl(field) : registerControl(field);\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup.filter((f) => !f.hideExpression).forEach((f) => this.changeHideState(f, hide));\n    }\n\n    if (field.options.fieldChanges) {\n      field.options.fieldChanges.next(<FormlyValueChangeEvent>{ field, type: 'hidden', value: hide });\n    }\n  }\n\n  private evalExpr(field: FormlyFieldConfigCache, prop: string, value: any) {\n    try {\n      let target = field;\n      const paths = prop.split('.');\n      const lastIndex = paths.length - 1;\n      for (let i = 0; i < lastIndex; i++) {\n        target = target[paths[i]];\n      }\n\n      target[paths[lastIndex]] = value;\n    } catch (error) {\n      error.message = `[Formly Error] [Expression \"${prop}\"] ${error.message}`;\n      throw error;\n    }\n\n    if (prop === 'templateOptions.disabled' && field.key) {\n      this.changeDisabledState(field, value);\n    }\n\n    if (prop.indexOf('model.') === 0) {\n      const key = prop.replace(/^model\\./, ''),\n        control = field.key && field.key === key ? field.formControl : field.form.get(key);\n\n      if (control && !(isNil(control.value) && isNil(value)) && control.value !== value) {\n        control.patchValue(value, { emitEvent: false });\n      }\n    }\n  }\n}\n","import { FormlyConfig } from '../../services/formly.config';\nimport { FormlyExtension, ValidatorOption, FormlyFieldConfigCache } from '../../models';\nimport { AbstractControl, Validators, ValidatorFn } from '@angular/forms';\nimport { FORMLY_VALIDATORS, defineHiddenProp, isPromise, observe, clone } from '../../utils';\nimport { updateValidity } from '../field-form/utils';\nimport { isObservable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/** @experimental */\nexport class FieldValidationExtension implements FormlyExtension {\n  constructor(private config: FormlyConfig) {}\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldValidation(field, 'validators');\n    this.initFieldValidation(field, 'asyncValidators');\n  }\n\n  private initFieldValidation(field: FormlyFieldConfigCache, type: 'validators' | 'asyncValidators') {\n    const validators: ValidatorFn[] = [];\n    if (type === 'validators' && !(field.hasOwnProperty('fieldGroup') && !field.key)) {\n      validators.push(this.getPredefinedFieldValidation(field));\n    }\n\n    if (field[type]) {\n      for (const validatorName of Object.keys(field[type])) {\n        validatorName === 'validation'\n          ? validators.push(...field[type].validation.map((v) => this.wrapNgValidatorFn(field, v)))\n          : validators.push(this.wrapNgValidatorFn(field, field[type][validatorName], validatorName));\n      }\n    }\n\n    defineHiddenProp(field, '_' + type, validators);\n  }\n\n  private getPredefinedFieldValidation(field: FormlyFieldConfigCache): ValidatorFn {\n    let VALIDATORS = [];\n    FORMLY_VALIDATORS.forEach((opt) =>\n      observe(field, ['templateOptions', opt], ({ currentValue, firstChange }) => {\n        VALIDATORS = VALIDATORS.filter((o) => o !== opt);\n        if (currentValue != null && currentValue !== false) {\n          VALIDATORS.push(opt);\n        }\n        if (!firstChange && field.formControl) {\n          updateValidity(field.formControl);\n        }\n      }),\n    );\n\n    return (control: AbstractControl) => {\n      if (VALIDATORS.length === 0) {\n        return null;\n      }\n\n      return Validators.compose(\n        VALIDATORS.map((opt) => () => {\n          const value = field.templateOptions[opt];\n          switch (opt) {\n            case 'required':\n              return Validators.required(control);\n            case 'pattern':\n              return Validators.pattern(value)(control);\n            case 'minLength':\n              return Validators.minLength(value)(control);\n            case 'maxLength':\n              return Validators.maxLength(value)(control);\n            case 'min':\n              return Validators.min(value)(control);\n            case 'max':\n              return Validators.max(value)(control);\n          }\n        }),\n      )(control);\n    };\n  }\n\n  private wrapNgValidatorFn(field: FormlyFieldConfigCache, validator: any, validatorName?: string) {\n    let validatorOption: ValidatorOption = null;\n    if (typeof validator === 'string') {\n      validatorOption = clone(this.config.getValidator(validator));\n    }\n\n    if (typeof validator === 'object' && validator.name) {\n      validatorOption = clone(this.config.getValidator(validator.name));\n      if (validator.options) {\n        validatorOption.options = validator.options;\n      }\n    }\n\n    if (typeof validator === 'object' && validator.expression) {\n      const { expression, ...options } = validator;\n      validatorOption = {\n        name: validatorName,\n        validation: expression,\n        options: Object.keys(options).length > 0 ? options : null,\n      };\n    }\n\n    if (typeof validator === 'function') {\n      validatorOption = {\n        name: validatorName,\n        validation: validator,\n      };\n    }\n\n    return (control: AbstractControl) => {\n      let errors: any = validatorOption.validation(control, field, validatorOption.options);\n      if (validatorName) {\n        if (isPromise(errors)) {\n          return errors.then((v) => this.handleAsyncResult(field, v, validatorOption));\n        }\n\n        if (isObservable(errors)) {\n          return errors.pipe(map((v) => this.handleAsyncResult(field, v, validatorOption)));\n        }\n\n        errors = !!errors;\n      }\n\n      return this.handleResult(field, errors, validatorOption);\n    };\n  }\n\n  private handleAsyncResult(field: FormlyFieldConfigCache, isValid, options: ValidatorOption) {\n    // workaround for https://github.com/angular/angular/issues/13200\n    field.options.detectChanges(field);\n\n    return this.handleResult(field, !!isValid, options);\n  }\n\n  private handleResult(field: FormlyFieldConfigCache, errors: any, { name, options }: ValidatorOption) {\n    if (typeof errors === 'boolean') {\n      errors = errors ? null : { [name]: options ? options : true };\n    }\n\n    const ctrl = field.formControl;\n    ctrl && ctrl['_childrenErrors'] && ctrl['_childrenErrors'][name] && ctrl['_childrenErrors'][name]();\n\n    if (ctrl && errors && errors[name]) {\n      const errorPath = errors[name].errorPath ? errors[name].errorPath : (options || {}).errorPath;\n\n      const childCtrl = errorPath ? field.formControl.get(errorPath) : null;\n      if (childCtrl) {\n        const { errorPath, ...opts } = errors[name];\n        childCtrl.setErrors({ ...(childCtrl.errors || {}), [name]: opts });\n\n        !ctrl['_childrenErrors'] && defineHiddenProp(ctrl, '_childrenErrors', {});\n        ctrl['_childrenErrors'][name] = () => {\n          const { [name]: toDelete, ...childErrors } = childCtrl.errors || {};\n          childCtrl.setErrors(Object.keys(childErrors).length === 0 ? null : childErrors);\n        };\n      }\n    }\n\n    return errors;\n  }\n}\n","import { FormlyExtension, FormlyFieldConfigCache } from '../../models';\nimport {\n  FormGroup,\n  FormControl,\n  AbstractControlOptions,\n  Validators,\n  ValidatorFn,\n  AsyncValidatorFn,\n} from '@angular/forms';\nimport { getFieldValue, defineHiddenProp } from '../../utils';\nimport { registerControl, findControl, updateValidity as updateControlValidity } from './utils';\nimport { of } from 'rxjs';\n\n/** @experimental */\nexport class FieldFormExtension implements FormlyExtension {\n  private root: FormlyFieldConfigCache;\n  prePopulate(field: FormlyFieldConfigCache) {\n    if (!this.root) {\n      this.root = field;\n    }\n\n    if (field.parent) {\n      Object.defineProperty(field, 'form', {\n        get: () => field.parent.formControl,\n        configurable: true,\n      });\n    }\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    if (field.key) {\n      this.addFormControl(field);\n    }\n\n    if (field.form && field.hasOwnProperty('fieldGroup') && !field.key) {\n      defineHiddenProp(field, 'formControl', field.form);\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    if (this.root !== field) {\n      return;\n    }\n\n    this.root = null;\n    const updateValidity = this.setValidators(field);\n    updateValidity && (field.form as any)._updateTreeValidity();\n  }\n\n  private addFormControl(field: FormlyFieldConfigCache) {\n    let control = findControl(field);\n    if (!control) {\n      const controlOptions: AbstractControlOptions = { updateOn: field.modelOptions.updateOn };\n\n      control = field.fieldGroup\n        ? new FormGroup({}, controlOptions)\n        : new FormControl({ value: getFieldValue(field), disabled: false }, controlOptions);\n    }\n\n    registerControl(field, control);\n  }\n\n  private setValidators(field: FormlyFieldConfigCache) {\n    let updateValidity = false;\n    if (field.key || !field.parent) {\n      const { formControl: c } = field;\n      const disabled = field.templateOptions ? field.templateOptions.disabled : false;\n      if (disabled && c.enabled) {\n        c.disable({ emitEvent: false, onlySelf: true });\n        updateValidity = true;\n      }\n\n      if (null === c.validator || null === c.asyncValidator) {\n        c.setValidators(() => {\n          const v = Validators.compose(this.mergeValidators<ValidatorFn>(field, '_validators'));\n\n          return v ? v(c) : null;\n        });\n        c.setAsyncValidators(() => {\n          const v = Validators.composeAsync(this.mergeValidators<AsyncValidatorFn>(field, '_asyncValidators'));\n\n          return v ? v(c) : of(null);\n        });\n\n        if (!c.parent) {\n          updateControlValidity(c);\n        } else {\n          updateValidity = true;\n        }\n      }\n    }\n\n    (field.fieldGroup || []).forEach((f) => f && this.setValidators(f) && (updateValidity = true));\n\n    return updateValidity;\n  }\n\n  private mergeValidators<T>(field: FormlyFieldConfigCache, type: '_validators' | '_asyncValidators'): T[] {\n    const validators: any = [];\n    const c = field.formControl;\n    if (c && c['_fields'] && c['_fields'].length > 1) {\n      c['_fields']\n        .filter((f: FormlyFieldConfigCache) => !f._hide)\n        .forEach((f: FormlyFieldConfigCache) => validators.push(...f[type]));\n    } else {\n      validators.push(...field[type]);\n    }\n\n    if (field.fieldGroup) {\n      field.fieldGroup\n        .filter((f) => f && !f.key && f.fieldGroup)\n        .forEach((f) => validators.push(...this.mergeValidators(f, type)));\n    }\n\n    return validators;\n  }\n}\n","import { ChangeDetectorRef } from '@angular/core';\nimport { FormlyConfig } from '../../services/formly.config';\nimport { FormlyFieldConfigCache, FormlyValueChangeEvent, FormlyExtension } from '../../models';\nimport {\n  getFieldId,\n  assignFieldValue,\n  isUndefined,\n  getFieldValue,\n  reverseDeepMerge,\n  defineHiddenProp,\n  clone,\n} from '../../utils';\nimport { Subject } from 'rxjs';\n\n/** @experimental */\nexport class CoreExtension implements FormlyExtension {\n  private formId = 0;\n  constructor(private config: FormlyConfig) {}\n\n  prePopulate(field: FormlyFieldConfigCache) {\n    const root = field.parent;\n    this.initRootOptions(field);\n    if (root) {\n      Object.defineProperty(field, 'options', { get: () => root.options, configurable: true });\n      Object.defineProperty(field, 'model', {\n        get: () => (field.key && field.fieldGroup ? getFieldValue(field) : root.model),\n        configurable: true,\n      });\n    }\n\n    this.getFieldComponentInstance(field).prePopulate();\n  }\n\n  onPopulate(field: FormlyFieldConfigCache) {\n    this.initFieldOptions(field);\n    this.getFieldComponentInstance(field).onPopulate();\n    if (field.fieldGroup) {\n      field.fieldGroup.forEach((f, index) => {\n        if (f) {\n          Object.defineProperty(f, 'parent', { get: () => field, configurable: true });\n          Object.defineProperty(f, 'index', { get: () => index, configurable: true });\n        }\n        this.formId++;\n      });\n    }\n  }\n\n  postPopulate(field: FormlyFieldConfigCache) {\n    this.getFieldComponentInstance(field).postPopulate();\n  }\n\n  private initRootOptions(field: FormlyFieldConfigCache) {\n    if (field.parent) {\n      return;\n    }\n\n    const options = field.options;\n    field.options.formState = field.options.formState || {};\n    if (!options.showError) {\n      options.showError = this.config.extras.showError;\n    }\n\n    if (!options.fieldChanges) {\n      defineHiddenProp(options, 'fieldChanges', new Subject<FormlyValueChangeEvent>());\n    }\n\n    if (!options._hiddenFieldsForCheck) {\n      options._hiddenFieldsForCheck = [];\n    }\n\n    options._markForCheck = (f) => {\n      console.warn(`Formly: 'options._markForCheck' is deprecated since v6.0, use 'options.detectChanges' instead.`);\n      options.detectChanges(f);\n    };\n\n    options.detectChanges = (f: FormlyFieldConfigCache) => {\n      if (f._componentRefs) {\n        f._componentRefs.forEach((ref) => {\n          // NOTE: we cannot use ref.changeDetectorRef, see https://github.com/ngx-formly/ngx-formly/issues/2191\n          const changeDetectorRef = ref.injector.get(ChangeDetectorRef);\n          changeDetectorRef.markForCheck();\n        });\n      }\n\n      if (f.fieldGroup) {\n        f.fieldGroup.forEach((f) => f && options.detectChanges(f));\n      }\n    };\n\n    options.resetModel = (model?: any) => {\n      model = clone(model ?? options._initialModel);\n      if (field.model) {\n        Object.keys(field.model).forEach((k) => delete field.model[k]);\n        Object.assign(field.model, model || {});\n      }\n\n      options.build(field);\n      field.form.reset(model);\n      if (options.parentForm && options.parentForm.control === field.formControl) {\n        (options.parentForm as { submitted: boolean }).submitted = false;\n      }\n    };\n\n    options.updateInitialValue = () => (options._initialModel = clone(field.model));\n    field.options.updateInitialValue();\n  }\n\n  private initFieldOptions(field: FormlyFieldConfigCache) {\n    reverseDeepMerge(field, {\n      id: getFieldId(`formly_${this.formId}`, field, field['index']),\n      hooks: {},\n      modelOptions: {},\n      templateOptions:\n        !field.type || !field.key\n          ? {}\n          : {\n              label: '',\n              placeholder: '',\n              focus: false,\n              disabled: false,\n            },\n    });\n\n    if (\n      field.type !== 'formly-template' &&\n      (field.template || (field.expressionProperties && field.expressionProperties.template))\n    ) {\n      field.type = 'formly-template';\n    }\n\n    if (!field.type && field.fieldGroup) {\n      field.type = 'formly-group';\n    }\n\n    if (field.type) {\n      this.config.getMergedField(field);\n    }\n\n    if (!field['autoClear'] && !isUndefined(field.defaultValue) && isUndefined(getFieldValue(field))) {\n      assignFieldValue(field, field.defaultValue);\n    }\n\n    field.wrappers = field.wrappers || [];\n  }\n\n  private getFieldComponentInstance(field: FormlyFieldConfigCache) {\n    const componentRef = this.config.resolveFieldTypeRef(field);\n    const instance: FormlyExtension = componentRef ? (componentRef.instance as any) : {};\n\n    return {\n      prePopulate: () => instance.prePopulate && instance.prePopulate(field),\n      onPopulate: () => instance.onPopulate && instance.onPopulate(field),\n      postPopulate: () => instance.postPopulate && instance.postPopulate(field),\n    };\n  }\n}\n","import { NgModule, ModuleWithProviders, Inject, Optional } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyForm } from './components/formly.form';\nimport { FormlyField } from './components/formly.field';\nimport { FormlyAttributes } from './templates/formly.attributes';\nimport { FormlyConfig, FORMLY_CONFIG } from './services/formly.config';\nimport { FormlyFormBuilder } from './services/formly.builder';\nimport { FormlyGroup } from './templates/formly.group';\nimport { FormlyValidationMessage } from './templates/formly.validation-message';\nimport { FormlyTemplateType } from './templates/field-template.type';\n\nimport { FieldExpressionExtension } from './extensions/field-expression/field-expression';\nimport { FieldValidationExtension } from './extensions/field-validation/field-validation';\nimport { FieldFormExtension } from './extensions/field-form/field-form';\nimport { CoreExtension } from './extensions/core/core';\nimport { ConfigOption } from './models';\n\nexport function defaultFormlyConfig(config: FormlyConfig): ConfigOption {\n  return {\n    types: [\n      { name: 'formly-group', component: FormlyGroup },\n      { name: 'formly-template', component: FormlyTemplateType },\n    ],\n    extensions: [\n      { name: 'core', extension: new CoreExtension(config) },\n      { name: 'field-validation', extension: new FieldValidationExtension(config) },\n      { name: 'field-form', extension: new FieldFormExtension() },\n      { name: 'field-expression', extension: new FieldExpressionExtension() },\n    ],\n  };\n}\n\n@NgModule({\n  declarations: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage, FormlyTemplateType],\n  exports: [FormlyForm, FormlyField, FormlyAttributes, FormlyGroup, FormlyValidationMessage],\n  imports: [CommonModule],\n})\nexport class FormlyModule {\n  static forRoot(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [\n        { provide: FORMLY_CONFIG, multi: true, useFactory: defaultFormlyConfig, deps: [FormlyConfig] },\n        { provide: FORMLY_CONFIG, useValue: config, multi: true },\n        FormlyConfig,\n        FormlyFormBuilder,\n      ],\n    };\n  }\n\n  static forChild(config: ConfigOption = {}): ModuleWithProviders<FormlyModule> {\n    return {\n      ngModule: FormlyModule,\n      providers: [{ provide: FORMLY_CONFIG, useValue: config, multi: true }, FormlyFormBuilder],\n    };\n  }\n\n  constructor(configService: FormlyConfig, @Optional() @Inject(FORMLY_CONFIG) configs: ConfigOption[] = []) {\n    if (!configs) {\n      return;\n    }\n\n    configs.forEach((config) => configService.addConfig(config));\n  }\n}\n","/*\n * Public API Surface of core\n */\n\nexport * from './lib/core';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {defaultFormlyConfig as ɵa} from './lib/core.module';\nexport {CoreExtension as ɵc} from './lib/extensions/core/core';\nexport {FieldExpressionExtension as ɵf} from './lib/extensions/field-expression/field-expression';\nexport {FieldFormExtension as ɵe} from './lib/extensions/field-form/field-form';\nexport {FieldValidationExtension as ɵd} from './lib/extensions/field-validation/field-validation';\nexport {FormlyTemplateType as ɵb} from './lib/templates/field-template.type';"],"names":["updateValidity","updateControlValidity"],"mappings":"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"}