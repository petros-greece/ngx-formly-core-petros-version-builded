{"version":3,"file":"ngx-formly-core-select.js","sources":["ng://@ngx-formly/core/select/select-options.pipe.ts","ng://@ngx-formly/core/select/select.module.ts","ng://@ngx-formly/core/select/ngx-formly-core-select.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\nimport { Observable, of as observableOf } from 'rxjs';\nimport { map } from 'rxjs/operators';\nimport { FormlyFieldConfig } from '@ngx-formly/core';\n\ninterface ISelectOption {\n  label: string;\n  disabled?: boolean;\n  value?: any;\n  group?: ISelectOption[];\n}\n\ntype ITransformOption = Partial<{\n  labelProp: (option: any) => string;\n  valueProp: (option: any) => any;\n  disabledProp: (option: any) => boolean;\n  groupProp: (option: any) => string;\n}>;\n\n@Pipe({ name: 'formlySelectOptions' })\nexport class FormlySelectOptionsPipe implements PipeTransform {\n  transform(options: any, field?: FormlyFieldConfig): Observable<ISelectOption[]> {\n    if (!(options instanceof Observable)) {\n      options = observableOf(options);\n    }\n\n    return (options as Observable<any>).pipe(map((value) => this.transformOptions(value, field)));\n  }\n\n  private transformOptions(options: any[], field?: FormlyFieldConfig): ISelectOption[] {\n    const to = this.transformSelectProps(field);\n\n    const opts: ISelectOption[] = [];\n    const groups = {};\n\n    options.forEach((option) => {\n      const o = this.transformOption(option, to);\n      if (o.group) {\n        const id = groups[o.label];\n        if (id === undefined) {\n          groups[o.label] = opts.push(o) - 1;\n        } else {\n          o.group.forEach((o) => opts[id].group.push(o));\n        }\n      } else {\n        opts.push(o);\n      }\n    });\n\n    if (field && field.templateOptions) {\n      field.templateOptions._flatOptions = !Object.keys(groups).length;\n    }\n\n    return opts;\n  }\n\n  private transformOption(option: any, to: ITransformOption): ISelectOption {\n    const group = to.groupProp(option);\n    if (Array.isArray(group)) {\n      return {\n        label: to.labelProp(option),\n        group: group.map((opt) => this.transformOption(opt, to)),\n      };\n    }\n\n    option = {\n      label: to.labelProp(option),\n      value: to.valueProp(option),\n      disabled: !!to.disabledProp(option),\n    };\n\n    if (group) {\n      return { label: group, group: [option] };\n    }\n\n    return option;\n  }\n\n  private transformSelectProps(field: FormlyFieldConfig): ITransformOption {\n    const to = field && field.templateOptions ? field.templateOptions : {};\n    const selectPropFn = (prop: any) => (typeof prop === 'function' ? prop : (o) => o[prop]);\n\n    return {\n      groupProp: selectPropFn(to.groupProp || 'group'),\n      labelProp: selectPropFn(to.labelProp || 'label'),\n      valueProp: selectPropFn(to.valueProp || 'value'),\n      disabledProp: selectPropFn(to.disabledProp || 'disabled'),\n    };\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { FormlySelectOptionsPipe } from './select-options.pipe';\n\n@NgModule({\n  declarations: [FormlySelectOptionsPipe],\n  exports: [FormlySelectOptionsPipe],\n})\nexport class FormlySelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["observableOf"],"mappings":"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"}